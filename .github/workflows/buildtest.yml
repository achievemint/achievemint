name: Build and Test Application

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Build v${{ matrix.node-version }}

    strategy:
      matrix:
        # Same version out in our Dockerfile
        node-version: [20.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: ci
        run: npm ci
      - name: lint
        run: npm run lint
      - name: test
        run: npm test
      - name: build
        run: npm run build

  cypress:
    name: Cypress ${{ matrix.test-type }}
    runs-on: ubuntu-latest
    needs: build_test

    strategy:
      fail-fast: false
      matrix:
        # Run e2e and component tests in parallel
        test-type: ['e2e', 'component']
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          # Run e2e tests with start-server-and-test
          start: npm run dev
          wait-on: 'http://localhost:3472'
          # Run component or e2e tests based on matrix
          component: ${{ matrix.test-type == 'component' }}
          browser: chrome
          headed: false

      # Upload screenshots when tests fail
      - name: Upload Cypress screenshots on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.test-type }}
          path: |
            cypress/screenshots
            cypress/videos
          retention-days: 7
